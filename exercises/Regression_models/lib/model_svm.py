import math
def score(input):
    var0 = ((((((((((((((((((((((((((((((((((((((((((((((((((((((22.23156187393363) + ((math.exp((-0.5478413743145986) * (math.pow((20.34) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.13) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.9) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.43) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((23.26) - (input[0]), 2.0)))) * (-0.32973033723220485))) + ((math.exp((-0.5478413743145986) * (math.pow((19.68) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.73) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.7) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.88) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((22.12) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.68) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.25) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.59) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.6) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.61) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((22.4) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.85) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.63) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.78) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.84) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.83) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.23) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.6) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.54) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.92) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.37) - (input[0]), 2.0)))) * (-0.5346605651655916))) + ((math.exp((-0.5478413743145986) * (math.pow((18.46) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.57) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.48) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((23.31) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.56) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.71) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.2) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.66) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.73) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.21) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.79) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.49) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.83) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.87) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((23.35) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.76) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.52) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.71) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.38) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.25) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.92) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.94) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.93) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((22.77) - (input[0]), 2.0)))) * (-0.3170558846229264))) + ((math.exp((-0.5478413743145986) * (math.pow((18.86) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((22.19) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((22.35) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.08) - (input[0]), 2.0)))) * (-1.0))
    var1 = (math.exp((-0.5478413743145986) * (math.pow((20.81) - (input[0]), 2.0)))) * (-1.0)
    return (((((((((((((((((((((((((((((((((((((((((((((((((((((((var0) + (var1)) + ((math.exp((-0.5478413743145986) * (math.pow((19.67) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((23.28) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.42) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.77) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((23.28) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.29) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.94) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.85) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.71) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.84) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.82) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.71) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.65) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.41) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.59) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.38) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((23.33) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.78) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.62) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((22.54) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.31) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.73) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.84) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.43) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.86) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.44) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.85) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.64) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.64) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.2) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.55) - (input[0]), 2.0)))) * (0.8809630591174535))) + ((math.exp((-0.5478413743145986) * (math.pow((18.72) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.9) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.76) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.67) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.0) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.06) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.42) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.89) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.09) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((22.09) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.73) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.01) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((18.55) - (input[0]), 2.0)))) * (-0.3279932358097368))) + ((math.exp((-0.5478413743145986) * (math.pow((18.51) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.29) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((21.36) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((22.32) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((23.14) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.65) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.29) - (input[0]), 2.0)))) * (1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((19.39) - (input[0]), 2.0)))) * (-1.0))) + ((math.exp((-0.5478413743145986) * (math.pow((20.95) - (input[0]), 2.0)))) * (-0.3715230362869938))) + ((math.exp((-0.5478413743145986) * (math.pow((18.71) - (input[0]), 2.0)))) * (1.0))

